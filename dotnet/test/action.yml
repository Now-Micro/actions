name: 'Run Tests'
description: 'Runs tests for a specific directory'
author: 'Trafera'

inputs:
  directory:
    description: 'Directory to run tests in'
    required: true
  dotnet-version:
    description: 'Version of .NET SDK to use'
    required: true
    default: '6.0.x'
  max-depth:
    description: 'Maximum depth to search for .sln or .csproj files.'
    required: false
    default: '5'
  project-regex:
    description: 'Regular expression to identify project file desired.  If empty, will return the first .csproj file found when find-project is true.'
    required: false
    default: ''

runs:
  using: 'composite'
  steps:
    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ inputs.dotnet-version }}

    - name: Get solution or project file
      id: get-solution-or-proj
      uses: Now-Micro/actions/get-project-and-solution-files-from-directory@v1
      with:
        directory: ${{ inputs.directory }}
        max-depth: ${{ inputs.max-depth }}
        find-project: true
        find-solution: false
        project-regex: ${{ inputs.project-regex }}

    - name: Run tests
      shell: bash
      run: |
        PROJECT_OR_SOLUTION=${{ steps.get-solution-or-proj.outputs.solution-found || steps.get-solution-or-proj.outputs.project-found }}
        if [ -z "$PROJECT_OR_SOLUTION" ]; then
          echo "No .sln or .csproj found in ${{ inputs.directory }}"
          exit 1
        fi
        dotnet test "$PROJECT_OR_SOLUTION" --verbosity normal
