name: 'Run dotnet lint checks'
description: 'Runs checks for a specific directory'
author: 'Trafera'

inputs:
  tools-json-path:
    description: 'Path to the dotnet-tools.json file'
    required: false
    default: './.config/dotnet-tools.json'
  csharpierrc-path:
    description: 'Path to the csharpierrc.yaml file'
    required: false
    default: './.config/csharpierrc.yaml'

runs:
  using: 'composite'
  steps:
    - name: Ensure files are present
      shell: bash
      run: |
        set -euo pipefail
        CSHARPIER_CFG='${{ inputs.csharpierrc-path }}'
        TOOLS_JSON='${{ inputs.tools-json-path }}'
        mkdir -p "$(dirname "$CSHARPIER_CFG")"
        mkdir -p "$(dirname "$TOOLS_JSON")"
        if [ ! -f "$CSHARPIER_CFG" ]; then
          echo "$CSHARPIER_CFG file is missing. Creating default.";
          printf '%s\n' 'printWidth: 120' 'useTabs: false' 'endOfLine: lf' > "$CSHARPIER_CFG"
        else
          echo "Found existing $CSHARPIER_CFG";
        fi
        if [ ! -f "$TOOLS_JSON" ]; then
          echo "$TOOLS_JSON file is missing. Creating default.";
          printf '%s\n' '{' '  "version": 1,' '  "isRoot": true,' '  "tools": {}' '}' > "$TOOLS_JSON"
        else
          echo "Found existing $TOOLS_JSON";
        fi
        echo 'State after ensure:'
        ls -al "$(dirname "$TOOLS_JSON")"

    - name: Ensure csharpier tool entry present
      shell: bash
      run: |
        set -euo pipefail
        TOOLS_JSON='${{ inputs.tools-json-path }}'
        node -e "const fs=require('fs');const f=process.env.TOOLS_JSON;const d=JSON.parse(fs.readFileSync(f,'utf8'));if(!d.tools)d.tools={};if(!d.tools.csharpier){d.tools.csharpier={version:'1.1.2',commands:['csharpier']};fs.writeFileSync(f,JSON.stringify(d,null,2)+'\n');console.log('Injected csharpier tool definition');}else{console.log('csharpier tool already present');}"
        echo '--- dotnet-tools.json ---'
        cat "$TOOLS_JSON"

    - name: Print Working Directory
      shell: bash
      run: pwd

    - name: Restore tools
      shell: bash
      run: dotnet tool restore

    - name: Run lint checks
      shell: bash
      run: |
        dotnet csharpier --check .
        echo 'CSharpier check complete'
