name: "Nuget Deploy"
description: "Deploys a NuGet package to a NuGet feed."
inputs:
  additional-build-args:
    description: "Additional arguments to pass to dotnet build."
    required: false
    default: ""
  additional-pack-args:
    description: "Additional arguments to pass to dotnet pack."
    required: false
    default: ""
  debug-mode:
    description: "Enable debug mode for additional logging."
    required: false
    default: "false"
  directory:
    description: "The directory to search for a .csproj file.  If not specified, the `project-file` input must be specified, otherwise an error will be thrown."
    required: false
  dotnet-version:
    description: "The version of .NET to use."
    required: false
    default: "9.0.x"
  github-token:
    description: "GitHub token for deploying nuget packages."
    required: true
  nuget-names:
    description: "Names of the NuGet source (comma-separated)"
    required: false
  nuget-passwords:
    description: "Personal Access Tokens for authentication (comma-separated)"
    required: false
  nuget-urls:
    description: "URLs of the NuGet feed (comma-separated)"
    required: false
  nuget-usernames:
    description: "Usernames for source authentication (comma-separated)"
    required: false
  package-directory:
    description: "Directory to publish .nupkg files. Defaults to 'nupkgs' in the workspace root."
    required: false
    default: "nupkgs"
  project-file:
    description: "Path to the project file. If not specified, The `directory` input must be specified otherwise an error will be thrown."
    required: false
    default: ""
  project-regex:
    description: "Regular expression to identify project file desired."
    required: false
    default: ""
  publish-source:
    description: "Publish destination. Leave empty for GitHub Packages; provide a folder path for local demo."
    required: false
    default: ""
  test-project-file:
    description: "Path to the test project file.  If not specified, tests will not be run."
    required: false
    default: ""

runs:
  using: "composite"
  steps:
    - name: Validate inputs
      shell: bash
      run: |
        PF="${{ inputs.project-file }}"
        DIR="${{ inputs.directory }}"
        if [ -z "${PF}" ] && [ -z "${DIR}" ]; then
          echo "Error: Either 'project-file' or 'directory' must be provided." >&2
          exit 1
        fi
        if [ -n "${PF}" ] && [ -n "${DIR}" ]; then
          echo "Info: Both 'project-file' and 'directory' provided; 'project-file' will be used."
        fi
    - name: Get Project File
      id: extract-project
      uses: Now-Micro/actions/get-project-and-solution-files-from-directory@v1
      if: ${{ inputs.project-file == '' }}
      with:
        directory: ${{ inputs.directory }}
        debug-mode: ${{ inputs.debug-mode }}
        find-project: true
        find-solution: false
        project-regex: ${{ inputs.project-regex }}

    - name: Resolve Project Path
      id: resolve
      shell: bash
      run: |
        if [ -n "${{ inputs.project-file }}" ]; then
          echo "path=${{ inputs.project-file }}" >> "$GITHUB_OUTPUT"
        else
          echo "path=${{ steps.extract-project.outputs.project-found }}" >> "$GITHUB_OUTPUT"
        fi

    - name: Build Project (pack)
      id: build
      uses: Now-Micro/actions/dotnet/build@v1
      with:
        additional-pack-args: ${{ inputs.additional-pack-args }} --output ${{ inputs.package-directory }}
        dotnet-version: ${{ inputs.dotnet-version }}
        file-to-build: ${{ steps.resolve.outputs.path }}
        mode: "pack"
        nuget-names: ${{ inputs.nuget-names }}
        nuget-passwords: ${{ inputs.nuget-passwords }}
        nuget-urls: ${{ inputs.nuget-urls }}
        nuget-usernames: ${{ inputs.nuget-usernames }}

    - name: Test
      if: ${{ inputs.test-project-file != '' }}
      uses: Now-Micro/actions/dotnet/test@v1
      with:
        project-file: ${{ inputs.test-project-file }}

    - name: Publish NuGet Package
      shell: bash
      run: node "$GITHUB_ACTION_PATH/publish.js"
      env:
        INPUT_PACKAGE_DIRECTORY: ${{ inputs.package-directory }}
        INPUT_PUBLISH_SOURCE: ${{ inputs.publish-source }}
        INPUT_GITHUB_TOKEN: ${{ inputs.github-token }}
