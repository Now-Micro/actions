name: Run Node Tests
on:
  workflow_dispatch:
jobs:
  run-tests:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          # Fetch full history so that before and after commits exist locally
          fetch-depth: 0

      - name: Setup Node.js
        uses: ./setup-node

      - name: Run action tests with coverage
        shell: bash
        run: |
          set -euo pipefail
          echo "Running Node tests with coverage"
          node --version
          # Run tests, capture output
          npx --yes c8 -r text -r lcov node --test 2>&1 | tee test-output.txt

      - name: Summarize results
        if: always()
        shell: bash
        run: |
          set -euo pipefail
          echo "### Node Test Summary" >> "$GITHUB_STEP_SUMMARY"
          if [ ! -f test-output.txt ]; then
            echo "Test output file missing" >> "$GITHUB_STEP_SUMMARY"
            exit 0
          fi
          clean_file=$(mktemp)
          # Strip ANSI escape codes
          sed -r 's/\x1B\[[0-9;]*[mK]//g' test-output.txt > "$clean_file" || cp test-output.txt "$clean_file"
          total_tests=$(grep -E 'ℹ tests ' "$clean_file" | awk '{print $3}' | tail -1 || echo 0)
          total_pass=$(grep -E 'ℹ pass ' "$clean_file" | awk '{print $3}' | tail -1 || echo 0)
          total_fail=$(grep -E 'ℹ fail ' "$clean_file" | awk '{print $3}' | tail -1 || echo 0)
          if [ -z "$total_tests" ]; then total_tests=0; fi
          if [ -z "$total_pass" ]; then total_pass=0; fi
          if [ -z "$total_fail" ]; then total_fail=0; fi
          echo "* Total tests: $total_tests" >> "$GITHUB_STEP_SUMMARY"
          echo "* Passed: $total_pass" >> "$GITHUB_STEP_SUMMARY"
          echo "* Failed: $total_fail" >> "$GITHUB_STEP_SUMMARY"
          echo "" >> "$GITHUB_STEP_SUMMARY"
          echo "#### Coverage (All files)" >> "$GITHUB_STEP_SUMMARY"
          cov_line=$(grep -E '^All files' "$clean_file" | tail -1 || true)
          if [ -n "$cov_line" ]; then
            echo '```' >> "$GITHUB_STEP_SUMMARY"
            echo "$cov_line" >> "$GITHUB_STEP_SUMMARY"
            echo '```' >> "$GITHUB_STEP_SUMMARY"
          else
            echo "Coverage summary not found" >> "$GITHUB_STEP_SUMMARY"
          fi
          if [ "$total_fail" -gt 0 ]; then
            echo "\n#### Failing Test Snippets" >> "$GITHUB_STEP_SUMMARY"
            awk 'BEGIN{p=0} /^✖ /{print; p=1; next} /^✔ /{p=0} {if(p) print}' "$clean_file" | sed -n '1,400p' >> "$GITHUB_STEP_SUMMARY" || true
          fi

      - name: Upload lcov report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-lcov
          path: lcov.info
          if-no-files-found: ignore
          retention-days: 1